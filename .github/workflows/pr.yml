name: CI Workflow Checks

on:
  pull_request:
    branches: [ main ]

jobs:
  run-checks:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install --immutable
        working-directory: .

      - name: Lint
        run: yarn lint
        working-directory: .

      - name: TypeScript compilation
        run: yarn tsc
        working-directory: .

      - name: Run tests
        run: yarn test
        working-directory: .

  build-android:
    needs: run-checks
    runs-on: ubuntu-latest
    container:
      image: tavoargento/react-native-android-ci:0.0.1

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_DEV_JSON }}" | base64 -d > ./android/app/src/development/google-services.json

      - name: Decode .env.dev file
        run: echo "${{ secrets.ENV_DEV }}" | base64 -d > ./.env.dev

      - name: Build Android App
        run: cd android && ./gradlew assembleDevelopmentDebug

  build-ios:
    needs: run-checks
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Add firebase services file
        run: |
          echo "${{ secrets.GOOGLE_SERVICE_INFO_DEV_PLIST }}" | base64 -d > ./ios/QDMobile/GoogleService-Info.plist

      - name: Install dependencies
        run: |
          yarn install

      - name: Install Gems
        run: bundle install

      - name: Install Pods
        run: |
          cd ios
          bundle exec pod install

      - name: Build iOS App
        run: |
          npx react-native run-ios --no-packager

  build-android-development-test-release:
    runs-on: ubuntu-latest
    container:
      image: tavoargento/react-native-android-ci:0.0.1
    env:
      STORE_FILE: ${{ secrets.STORE_FILE }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      STORE_ALIAS: ${{ secrets.STORE_ALIAS }}
      STORE_KEY_PASSWORD: ${{ secrets.STORE_KEY_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Install Gems
        run: bundle install

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_DEV_JSON }}" | base64 -d > ./android/app/src/development/google-services.json

      - name: Decode .env.dev file
        run: echo "${{ secrets.ENV_DEV }}" | base64 -d > ./.env.dev

      - name: Decode release key file
        run: echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 -d > ./android/app/release-key.keystore

      - name: Build Android Release App
        run: cd android && ./gradlew assembleDevelopmentRelease

      - name: Distribute to Firebase Dev App Distribution
        run: |
          cd android
          bundle exec fastlane android distribute_dev_app

  build-android-production-test-release:
    runs-on: ubuntu-latest
    container:
      image: tavoargento/react-native-android-ci:0.0.1
    env:
      STORE_FILE: ${{ secrets.STORE_FILE }}
      STORE_PASSWORD: ${{ secrets.STORE_PASSWORD }}
      STORE_ALIAS: ${{ secrets.STORE_ALIAS }}
      STORE_KEY_PASSWORD: ${{ secrets.STORE_KEY_PASSWORD }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn install

      - name: Install Gems
        run: bundle install

      - name: Decode google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_PROD_JSON }}" | base64 -d > ./android/app/src/production/google-services.json

      - name: Decode .env.prod file
        run: echo "${{ secrets.ENV_PROD }}" | base64 -d > ./.env.prod

      - name: Decode release key file
        run: echo "${{ secrets.STORE_FILE_CONTENT }}" | base64 -d > ./android/app/release-key.keystore

      - name: Build Android Release App
        run: cd android && ./gradlew assembleProductionRelease

      - name: Distribute to Firebase Prod App Distribution
        run: |
          cd android
          bundle exec fastlane android distribute_prod_app
                  
#  build-and-push-android-docker-image:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Check Out Repo
#        uses: actions/checkout@v2
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.DOCKER_HUB_USERNAME }}
#          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
#
#      - name: Build and Push Docker image
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: tavoargento/react-native-android-ci:0.0.1
